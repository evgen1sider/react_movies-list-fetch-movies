{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","BASE_URL","loadMovie","a","fetch","response","ok","Error","status","statusText","json","FindMovie","props","onAdd","useState","newMovie","setNewMovie","query","setValue","find","setFind","getMovie","data","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","required","onClick","disabled","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"+wEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MADwC,IAExCC,mBAFwC,MAE1B,GAF0B,EAGxCC,EAHwC,EAGxCA,OACAC,EAJwC,EAIxCA,QAJwC,OAMxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC9BKK,EAA8B,SAAC,GAAD,QACzCC,cADyC,MAChC,GADgC,SAGzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,uBCbtBC,G,MAAW,6CAEJC,EAAS,uCAAG,0CAAAC,EAAA,6DAAOf,EAAP,+BAAe,MAAf,SACAgB,MAAM,GAAD,OAAIH,EAAJ,cAAkBb,IADvB,WACjBiB,EADiB,QAGTC,GAHS,sBAIf,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ5B,gCAOhBJ,EAASK,QAPO,2CAAH,qDCQTC,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MACR,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAOMC,EAAQ,uCAAG,4BAAAlB,EAAA,sEACID,EAAUe,GADd,UAGO,WAFhBK,EADS,QAGNC,SAHM,uBAIbP,EAAY,MACZI,GAAQ,GALK,0BAUfA,GAAQ,GAERJ,EAAY,CACV5B,MAAOkC,EAAKE,MACZnC,YAAaiC,EAAKG,KAClBnC,OAAQgC,EAAKI,OACb1B,OAAQsB,EAAKK,OACbpC,QAAQ,8BAAD,OAAgC+B,EAAKK,UAG9CT,EAAS,IApBM,4CAAH,qDAuBd,OACE,qCACE,uBAAM1B,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQoC,QAAQ,cAAjC,yBAIA,qBAAKpC,UAAU,UAAf,SACE,uBACEqC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvC,UAAW2B,EAAO,QAAU,kBAC5Ba,MAAOf,EACPgB,SA3CS,SAACC,GACpBd,GAAQ,GACRF,EAASgB,EAAMC,OAAOH,QA0CZI,UAAQ,MAKTjB,GACC,mBAAG3B,UAAU,iBAAb,qDAON,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEqC,KAAK,SACLrC,UAAU,kBACV6C,QAAS,WACPhB,KAJJ,4BAWF,qBAAK7B,UAAU,UAAf,SACE,wBACEqC,KAAK,SACLrC,UAAU,oBACV8C,UAAWvB,EACXsB,QAAS,WACU,OAAbtB,GACFF,EAAME,GAGRC,EAAY,OAThB,qCAkBN,sBAAKxB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBAEEuB,GAAY,cAAC,EAAD,eAAeA,W,QCtGxBwB,EAAgB,WAC3B,MAA4BzB,mBAAkBQ,GAA9C,mBAAOzB,EAAP,KAAe2C,EAAf,KAQA,OACE,sBAAKhD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAWqB,MAZG,SAACE,GACfA,IAAalB,EAAOsB,MAAK,SAACpB,GAAD,OAAkBA,EAAMC,SAAWe,EAASf,WACvEwC,GAAU,uCAAU3C,GAAV,CAAkBkB,gBCPlC0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53917923.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=43371f3e&';\n\nexport const loadMovie = async (title = 'See') => {\n  const response = await fetch(`${BASE_URL}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { loadMovie } from '../../api/api';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { onAdd } = props;\n  const [newMovie, setNewMovie] = useState(null as Movie | null);\n  const [query, setValue] = useState('');\n  const [find, setFind] = useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFind(true);\n    setValue(event.target.value);\n  };\n\n  const getMovie = async () => {\n    const data = await loadMovie(query);\n\n    if (data.Response === 'False') {\n      setNewMovie(null);\n      setFind(false);\n\n      return;\n    }\n\n    setFind(true);\n\n    setNewMovie({\n      title: data.Title,\n      description: data.Plot,\n      imgUrl: data.Poster,\n      imdbId: data.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    });\n\n    setValue('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={find ? 'input' : 'input is-danger'}\n              value={query}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          {\n            (find) || (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                getMovie();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!newMovie}\n              onClick={() => {\n                if (newMovie !== null) {\n                  onAdd(newMovie);\n                }\n\n                setNewMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          newMovie && <MovieCard {...newMovie} />\n        }\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  const addNewMovie = (newMovie: Movie) => {\n    if (newMovie && !movies.find((movie: Movie) => movie.imdbId === newMovie.imdbId)) {\n      setMovies(() => [...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}